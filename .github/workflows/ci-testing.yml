name: CI - Test & Push (testing branch)

on:
  push:
    branches: [ "testing" ]

permissions:
  contents: read
  packages: write

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Node.js setup for frontend tests
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Run frontend tests if present
        run: |
          if [ -f frontend/package.json ]; then
            cd frontend
            npm ci
            npm test --if-present
          fi

      # Python setup for backend services
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run backend tests if present
        run: |
          for service in backend/*; do
            if [ -f "$service/requirements.txt" ]; then
              echo "Installing deps for $service"
              pip install -r "$service/requirements.txt" || true
              pytest "$service" || true
            fi
          done

  build_and_push:
    name: Build & push Docker images to ACR
    runs-on: ubuntu-latest
    needs: test
    if: ${{ success() }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "frontend"
            context:  ./task10_2d/frontend
            file: ./task10_2d/frontend/Dockerfile
          - name: "customer-service"
            context: ./task10_2d/backend/customer_service
            file: ./task10_2d/backend/customer_service/Dockerfile
          - name: "order-service"
            context: ./task10_2d/backend/order_service
            file: ./task10_2d/backend/order_service/Dockerfile
          - name: "product-service"
            context: ./task10_2d/backend/product_service
            file: ./task10_2d/backend/product_service/Dockerfile
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Build and push ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ matrix.name }}:${{ env.IMAGE_TAG }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ matrix.name }}:latest
